AWSTemplateFormatVersion: '2010-09-09'
Description: "AWS Aurora Postgres, Do Not Remove Apache License Version 2.0 (qs-1pj6s43e3) May,15,2019"
Metadata:
  LICENSE: Apache License Version 2.0
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Database Configuration
      Parameters:
      - DBName
      - DBAutoMinorVersionUpgrade
      - DBBackupRetentionPeriod
      - DBInstanceClass
      - DBMasterUsername
      - DBMasterUserPassword
      - DBPort
      - DBAccessCIDR
      - DBMultiAZ
      - DBAllocatedStorageEncrypted
    - Label:
        default: Network Configuration
      Parameters:
      - Subnet1ID
      - Subnet2ID
      - CustomDBSecurityGroup
      - VPCID
    ParameterLabels:
      DBName:
        default: Database Name
      DBAllocatedStorageEncrypted:
        default: Database Encryption Enabled
      DBAutoMinorVersionUpgrade:
        default: Database Auto Minor Version Upgrade
      DBBackupRetentionPeriod:
        default: Database Backup Retention Period
      DBInstanceClass:
        default: Database Instance Class
      DBMasterUsername:
        default: Database Master Username
      DBMasterUserPassword:
        default: Database Master Password
      DBPort:
        default: Database Port
      DBAccessCIDR:
        default: Database Connection CIDR
      DBMultiAZ:
        default: Single or MultiAZ Deployment
      Subnet1ID:
        default: Private Subnet1 ID
      Subnet2ID:
        default: Private Subnet2 ID
      VPCID:
        default: VPC Id
      CustomDBSecurityGroup:
        default: Custom Securiy Group
Conditions:
  IsDBMultiAZ:
    !Equals
    - !Ref DBMultiAZ
    - 'true'
  DoCreateDatabase:
    !Not
      - !Equals
        - !Ref DBName
        - ''
  UseDatabaseEncryption:
    !Equals
    - !Ref DBAllocatedStorageEncrypted
    - true
  CreateSecurityGroup:
    !Equals
    - !Ref CustomDBSecurityGroup
    - ''
Outputs: 
  DBName: 
    Description: "Amazon Aurora database name"
    Value: !Ref DBName
  RDSEndPointAddress: 
    Description: "Amazon Aurora endpoint"
    Value: !Sub ${AuroraDBCluster.Endpoint.Address}
  RDSEndPointPort: 
    Description: "Amazon Aurora port"
    Value: !Sub ${AuroraDBCluster.Endpoint.Port}
  RDSEndPoints: 
    Description: "Full Amazon Aurora endpoint"
    Value: !Sub ${AuroraDBCluster.Endpoint.Address}:${AuroraDBCluster.Endpoint.Port}/${DBName}
  RDSEncryptionKey:
    Condition: UseDatabaseEncryption
    Description: The alias of the encryption key created for RDS
    Value: !Ref EncryptionKeyAlias
Parameters: 
  DBAllocatedStorageEncrypted:
    Default: true
    AllowedValues:
      - true
      - false
    Description: Whether or not to encrypt the database
    Type: String
  DBAutoMinorVersionUpgrade: 
    AllowedValues: 
      - "true"
      - "false"
    Default: "false"
    Description: "Select true/false to setup Auto Minor Version upgrade"
    Type: String
  DBBackupRetentionPeriod: 
    Default: "35"
    Description: "The number of days for which automatic database snapshots are retained."
    Type: String
  DBInstanceClass: 
    AllowedValues: 
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
    ConstraintDescription: "Must select a valid database instance type."
    Default: db.r4.large
    Description: "The name of the compute and memory capacity class of the database instance."
    Type: String
  DBAccessCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/x"
    Description: "Allowed CIDR block for external SSH access"
    Type: String
    Default: 10.0.0.0/16
  DBMasterUserPassword: 
    AllowedPattern: "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*"
    ConstraintDescription: "Min 8 chars. Must include 1 uppercase, 1 lowercase, 1 number, 1 (non / @ \" ') symbol"
    Description: "The database admin account password"
    MaxLength: "64"
    MinLength: "8"
    NoEcho: "True"
    Type: String
  DBMasterUsername: 
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: "must begin with a letter and contain only alphanumeric characters."
    Default: pgadmin
    Description: "The database admin account username"
    MaxLength: "16"
    MinLength: "1"
    Type: String
  DBPort:
    Default: 3306
    Description: "The port the instance will listen for connections on"
    Type: Number
  DBMultiAZ: 
    AllowedValues: 
      - "true"
      - "false"
    Default: "true"
    Description: "Specifies if the database instance is a multiple Availability Zone deployment."
    Type: String
  DBName: 
    AllowedPattern: "[a-zA-Z0-9]*"
    Description: "Name of the Amazon Aurora database"
    MaxLength: "64"
    MinLength: "0"
    Default: 'AuroraPostgresDB'
    Type: String
  CustomDBSecurityGroup:
    Description: "ID of the security group (e.g. sg-0234se). One will be created for you if left empty."
    Type: String
    Default: ''
  Subnet1ID:
    Description: Private Subnet Id 1
    Type: 'AWS::EC2::Subnet::Id'
  Subnet2ID:
    Description: Private Subnet Id 2
    Type: 'AWS::EC2::Subnet::Id'
  VPCID: 
    Description: "ID of the VPC you are deploying Aurora in (e.g., vpc-0343606e)"
    Type: 'AWS::EC2::VPC::Id'
    Default: ''
Resources:
  EncryptionKey:
    Condition: UseDatabaseEncryption
    DeletionPolicy: Retain
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: !Ref AWS::StackName
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: 'kms:*'
            Resource: '*'
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
  EncryptionKeyAlias:
    Condition: UseDatabaseEncryption
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}"
      TargetKeyId: !Ref EncryptionKey
  AuroraDB1:
    Properties:
      AutoMinorVersionUpgrade: !Ref DBAutoMinorVersionUpgrade
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBInstanceClass: !Ref DBInstanceClass
      Engine: aurora-postgresql
      PubliclyAccessible: false
      Tags:
        -
          Key: Name
          Value: !Sub AuroraDB-${AWS::StackName}
    Type: "AWS::RDS::DBInstance"
  AuroraDB2:
    Condition: IsDBMultiAZ
    Properties:
      AutoMinorVersionUpgrade: !Ref DBAutoMinorVersionUpgrade
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBInstanceClass: !Ref DBInstanceClass
      Engine: aurora-postgresql
      PubliclyAccessible: false
      Tags:
        -
          Key: Name
          Value: !Sub AuroraDB-${AWS::StackName}
    Type: "AWS::RDS::DBInstance"
  AuroraDB3:
    Condition: IsDBMultiAZ
    Properties:
      AutoMinorVersionUpgrade: !Ref DBAutoMinorVersionUpgrade
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBInstanceClass: !Ref DBInstanceClass
      Engine: aurora-postgresql
      PubliclyAccessible: false
      Tags:
        -
          Key: Name
          Value: !Sub AuroraDB-${AWS::StackName}
    Type: "AWS::RDS::DBInstance"
  AuroraDBCluster: 
    Properties: 
      BackupRetentionPeriod: !Ref DBBackupRetentionPeriod
      CopyTagsToSnapshot: true
      DBClusterParameterGroupName: default.aurora-postgresql9.6
      DBSubnetGroupName: !Ref AuroraDBSubnetGroup
      DatabaseName:
        !If
        - DoCreateDatabase
        - !Ref DBName
        - !Ref AWS::NoValue
      Engine: aurora-postgresql
      KmsKeyId: !If [UseDatabaseEncryption, !GetAtt EncryptionKey.Arn, !Ref 'AWS::NoValue']
      MasterUserPassword: !Ref DBMasterUserPassword
      MasterUsername: !Ref DBMasterUsername
      Port: !Ref DBPort
      StorageEncrypted: !If [UseDatabaseEncryption, !Ref DBAllocatedStorageEncrypted, !Ref 'AWS::NoValue']
      Tags: 
        - 
          Key: Name
          Value: !Sub AuroraDB-${AWS::StackName}
      VpcSecurityGroupIds: 
        !If
          - CreateSecurityGroup
          - [!Ref RDSSecurityGroup]
          - [!Ref CustomDBSecurityGroup]
    Type: "AWS::RDS::DBCluster"
    UpdateReplacePolicy: Snapshot
  AuroraDBSubnetGroup: 
    Properties: 
      DBSubnetGroupDescription: "Subnets available for the Amazon Aurora database instance"
      SubnetIds: 
       - !Ref Subnet1ID
       - !Ref Subnet2ID
    Type: "AWS::RDS::DBSubnetGroup"
  RDSSecurityGroup:
    Condition: CreateSecurityGroup
    Properties: 
      GroupDescription: "Allow access to database port" 
      SecurityGroupEgress: 
        - 
          CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - 
          CidrIp: 0.0.0.0/0
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      SecurityGroupIngress: 
        - 
          CidrIp: !Ref DBAccessCIDR 
          FromPort: !Ref DBPort
          IpProtocol: tcp
          ToPort: !Ref DBPort
      VpcId: !Ref VPCID
    Type: "AWS::EC2::SecurityGroup"
    
